[{"D:\\react\\drag-drop-demo\\src\\index.js":"1","D:\\react\\drag-drop-demo\\src\\reportWebVitals.js":"2","D:\\react\\drag-drop-demo\\src\\App.js":"3","D:\\react\\drag-drop-demo\\src\\component\\Board.js":"4","D:\\react\\drag-drop-demo\\src\\component\\AddTodo.js":"5"},{"size":500,"mtime":1606475413262,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1606475413262,"results":"8","hashOfConfig":"7"},{"size":223,"mtime":1610521302749,"results":"9","hashOfConfig":"7"},{"size":9077,"mtime":1608703593464,"results":"10","hashOfConfig":"7"},{"size":5894,"mtime":1608642404316,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"5ouiv7",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"D:\\react\\drag-drop-demo\\src\\index.js",[],["24","25"],"D:\\react\\drag-drop-demo\\src\\reportWebVitals.js",[],"D:\\react\\drag-drop-demo\\src\\App.js",["26"],"D:\\react\\drag-drop-demo\\src\\component\\Board.js",[],"D:\\react\\drag-drop-demo\\src\\component\\AddTodo.js",["27","28","29","30"],"import {Button, Container, Grid, TextField, Typography } from '@material-ui/core'\r\n// import { db, auth, storage } from '../firebase'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n// import { useHistory } from 'react-router-dom'\r\nfunction AddTodo(props) {\r\n    // let history = useHistory()\r\n    var today = new Date(),\r\n    currentDate = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate()\r\n    const [title, setTitle] = useState('')\r\n    const [date, setDate] = useState(currentDate)\r\n    const [time, setTime] = useState('12:00')\r\n    const [description,setDescription] = useState('')\r\n    const [userId,setUserId] =useState(null)\r\n    \r\n    useEffect(()=>{\r\n        // var user = JSON.parse(localStorage.getItem(\"user\"))\r\n        // user===null ? history.push('/signin'):setUserId(user.uid)\r\n    })\r\n    \r\n    const reset=()=>{\r\n        setTitle(\"\")\r\n        setDate(currentDate)\r\n        setTime(\"12:00\")\r\n        setDescription(\"\")\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()  \r\n        debugger\r\n        console.log(\"it's call\")\r\n        // var conDate=date.split(\"-\")\r\n        // var conTime=time.split(\":\")\r\n        // // console.log(conDate)\r\n        // if(conTime == \"\")\r\n        // {\r\n        //     conTime[0]=\"12\"\r\n        //     conTime[1]=\"00\"\r\n        // }\r\n        // var conDateTime=Date(conDate[0],conDate[1],conDate[2],conTime[0],conTime[1])\r\n        // db.collection(\"tasks\").add({\r\n        //     title,\r\n        //     description,\r\n        //     dateTime:conDateTime.toLocaleString(),\r\n        //     entryTime:Date().toLocaleString(),  \r\n        //     user:userId,\r\n        //     status:false\r\n        // })\r\n        // .then(function() {\r\n        //     toast.info(\"Added new task\")\r\n        //     // console.log(\"Document successfully written!\")\r\n        //     reset()\r\n        // })\r\n        // .catch(function(error) {\r\n        //     toast.error(\"Something went wrong!\")\r\n        //     console.error(\"Error writing document: \", error);\r\n        // });\r\n    } \r\n    return (\r\n        <div>\r\n            <ToastContainer />\r\n            <Container className=\"\">\r\n                <div className=\"\">\r\n                    <Typography component=\"h1\" variant=\"h5\" className=\"signup__smallBottomMargin\">\r\n                        Add Task\r\n                    </Typography>\r\n                    <form noValidate className=\"signup__form signup__smallTopMargin\">\r\n                        <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"title\"\r\n                                name=\"title\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"title\"\r\n                                label=\"Task Title\"\r\n                                autoFocus\r\n                                onChange={(e) => setTitle(e.target.value)}\r\n                                value={title}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"date\"\r\n                                name=\"date\"\r\n                                type=\"date\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"date\"\r\n                                label=\"Task Date\"\r\n                                autoFocus\r\n                                onChange={(e) => setDate(e.target.value)}\r\n                                value={date}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                type=\"time\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"time\"\r\n                                label=\"Task Time\"\r\n                                name=\"lastName\"\r\n                                autoComplete=\"time\"\r\n                                onChange={(e) => setTime(e.target.value)}\r\n                                value={time}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required    \r\n                                fullWidth\r\n                                multiline\r\n                                rows={7}\r\n                                name=\"description\"\r\n                                label=\"Task Description\"\r\n                                id=\"description\"\r\n                                autoComplete=\"task-description\"\r\n                                onChange={(e)=>setDescription(e.target.value)}\r\n                                value={description}\r\n                            />\r\n                        </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            className=\"mt-1\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            Add Task\r\n                        </Button>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddTodo;",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":8,"nodeType":"37","messageId":"38","endLine":1,"endColumn":15},{"ruleId":"35","severity":1,"message":"39","line":4,"column":26,"nodeType":"37","messageId":"38","endLine":4,"endColumn":31},{"ruleId":"35","severity":1,"message":"40","line":15,"column":12,"nodeType":"37","messageId":"38","endLine":15,"endColumn":18},{"ruleId":"35","severity":1,"message":"41","line":15,"column":19,"nodeType":"37","messageId":"38","endLine":15,"endColumn":28},{"ruleId":"35","severity":1,"message":"42","line":22,"column":11,"nodeType":"37","messageId":"38","endLine":22,"endColumn":16},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'AddTodo' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'reset' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]